<template>
	<view class="page-map">
		<view class="header" :style="[headerStyle]">
			<view class="row" @click="goBack">
				<text :style="[headerText]">< </text>
				<text class="back" :style="[headerText]">返回</text>
			</view>
			<view class="row title">
				<text :style="[headerText]">{{title}}</text>
			</view>
			<view class="row"></view>
		</view>		
		<map
			id="hotelMap"
			scale="18"
			@markertap="markers"
			class="map"
			:show-location="true"
			:enable-rotate="true"
			:latitude="vuex_store.latitude"
			:longitude="vuex_store.longitude"
			:markers="covers"
			@regionchange="regionchange"
		></map>
		<view class="foot-bar">
			<view class="option">
				<text class="o-item" :class="{ active: word == '交通' }" @click="word = '交通'">交通</text>
				<text class="o-item" :class="{ active: word == '商场' }" @click="word = '商场'">商场</text>
				<text class="o-item" :class="{ active: word == '便利店' }" @click="word = '便利店'">便利店</text>
				<text class="o-item" :class="{ active: word == '餐饮' }" @click="word = '餐饮'">餐饮</text>
				<text class="o-item" :class="{ active: word == '景点' }" @click="word = '景点'">景点</text>
			</view>
			<view class="search">
				<view class="inputs">
					<input class="input" v-model="keyword" type="text" placeholder="请输入关键词"/>
				</view>
				<view class="to-search">
					<text class="search-text" @click="search">搜索</text>
				</view>
			</view>
		</view>
	</view>
</template>

<script>
export default {
	onLoad(e) {
		this.word = e.word || '交通';
		this.title = e.word || '交通';
	},
	computed:{
		headerStyle(){
			return {
				backgroundColor:uni.$fa.style.bgColor				
			}
		},
		headerText(){
			return {
				color:uni.$fa.style.color
			}
		}
	},
	async onReady() {
		this.map = uni.createMapContext('hotelMap');
		await this.getDefaultStore();
		//渲染信息
		this.render(this.word);
	},
	data() {
		return {
			map: null,
			covers: [],
			lsCovers: [],
			circles: [],
			store: [],
			title:'周边景点',
			keyword: '',
			word: '交通',
			allpage: 1,
			page: 1,
			markerId: 0,
			vuex_location: {},
			vuex_store: {}
		};
	},
	watch: {
		word(newValue, oldValue) {
			if (newValue) {
				this.render(newValue);
			}
		}
	},
	methods: {
		search() {
			if (!this.keyword) {
				uni.showToast({
					icon:'none',
					title:'请输入关键词'
				});
				return;
			}
			this.render(this.keyword, 1);
		},
		goBack(){
			uni.navigateBack({
				delta:1
			})
		},
		getDefaultStore() {
			let that = this;
			return new Promise((resolve, reject) => {
				uni.getLocation({
					type: 'wgs84',
					success: function(res) {
						that.vuex_location = {
							latitude: res.latitude,
							longitude: res.longitude
						};
						uni.$u
							.get('/addons/booking/store/defaultStore', {
								latitude: res.latitude,
								longitude: res.longitude
							})
							.then(res => {
								if (res.code == 1) {
									that.vuex_store = res.data;
									resolve();
								} else {
									that.$u.toast(res.msg);
								}
							});
					}
				});
			});
		},
		goSearch(keyword, type) {
			uni.$u
				.get('/addons/booking/common/mapSearch', {
					page: this.page,
					keyword: keyword,
					latitude: this.vuex_store.latitude,
					longitude: this.vuex_store.longitude
				})
				.then(res => {
					if (res.code == 1) {
						this.allpage = Math.ceil(res.data.count / 20);
						res.data.data.map((item, index) => {
							this.lsCovers.push({
								id: this.markerId,
								latitude: item.location.lat,
								longitude: item.location.lng,
								address: item.address,
								callout: {
									content: item.title,
									padding: 10,
									borderRadius: 5,
									bgColor: uni.$fa.style.bgColor,
									color: uni.$fa.style.color,
									display: 'ALWAYS'
								}
							});
							//是搜索，且第一个则移动
							if (type == 1 && this.markerId == 1) {
								this.map.moveToLocation({
									latitude: item.location.lat,
									longitude: item.location.lng
								});
							}
							this.markerId++;
						});
						// if (this.allpage > this.page && this.page < 2) {
						// 	this.page++;
						// 	this.goSearch(keyword, type);
						// } else {
							this.covers = this.lsCovers;
						// }
					} else {
						this.$u.toast(res.msg);
					}
				});
		},
		//先渲染门店标记
		render(word, type) {
			this.page = 1;
			this.markerId = 0;
			this.lsCovers = [];
			this.lsCovers.push({
				id: this.markerId,
				latitude: this.vuex_store.latitude,
				longitude: this.vuex_store.longitude,
				iconPath: '../../static/map.png',
				address: this.vuex_store.address,
				callout: {
					content: this.vuex_store.name,
					padding: 10,
					borderRadius: 5,
					bgColor: '#F24E4E',
					color: uni.$fa.style.color,
					display: 'ALWAYS'
				}
			});
			this.markerId++;
			this.goSearch(word, type);
		},
		//标记点 点击
		markers(e) {
			let markerId = e.detail.markerId;
			if (!this.covers[markerId] || !this.covers[markerId].latitude) {
				return;
			}
			uni.openLocation({
				latitude: this.covers[markerId].latitude,
				longitude: this.covers[markerId].longitude,
				name: this.covers[markerId].callout.content,
				address: this.covers[markerId].address,
				success: function() {
					console.log('success');
				}
			});
		},
		regionchange(e) {
			console.log(e);
		}
	}
};
</script>

<style scoped>
.page-map {		
	flex: 1;
}
.header{
	height: 150rpx;	
	justify-content: space-between;
	flex-direction: row;
	align-items: center;
	padding: 50rpx 30rpx 0;
}
.row{
	width: 250rpx;
	flex-direction: row;
	align-items: center;
	flex: 1;
}
.back{
	font-size: 30rpx;
}
.title{
	flex-direction: row;
	justify-content: center;
}
.map {
	flex: 1;
	width: 750rpx;
}

.foot-bar {
	position: fixed;
	bottom: 80rpx;
	left: 20rpx;
	width:710rpx;
}
.option{
	padding:20rpx 10rpx;
	background-color: #FFFFFF;
	width:710rpx;
	flex-direction: row;
	justify-content: space-between;
}
.o-item{
	flex: 1;
	color: #999;
	text-align: center;
	font-size: 32rpx;
}
.search{
	margin-top: 20rpx;
	flex-direction: row;
	justify-content: space-between;
}
.inputs{
	width: 550rpx;
	height: 80rpx;
	background-color: #FFFFFF;
	padding: 10rpx 20rpx;
}
.input{
	font-size: 32rpx;
}
.to-search{
	background-color: #FFFFFF;
	height: 80rpx;
	flex-direction: row;
	justify-content: center;
	align-items: center;
	width: 120rpx;
}
.active{
	color: #dd6161;
	font-weight: bold;
}
.search-text{
	font-size: 32rpx;
}
</style>
